"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[774],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2769:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return p},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var r=n(3117),o=(n(7378),n(3905));const a={title:"Return object"},i=void 0,l={unversionedId:"design/return-object",id:"design/return-object",title:"Return object",description:"This Hook returns an object of the following shape:",source:"@site/docs/design/return-object.md",sourceDirName:"design",slug:"/design/return-object",permalink:"/react-accessible-dropdown-menu-hook/docs/design/return-object",draft:!1,editUrl:"https://github.com/sparksuite/react-accessible-dropdown-menu-hook/edit/master/website/docs/design/return-object.md",tags:[],version:"current",frontMatter:{title:"Return object"},sidebar:"default",previous:{title:"Using",permalink:"/react-accessible-dropdown-menu-hook/docs/getting-started/using"},next:{title:"Accessibility",permalink:"/react-accessible-dropdown-menu-hook/docs/design/accessibility"}},s={},u=[],c={toc:u};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This Hook returns an object of the following shape:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"{\n    buttonProps: {\n        onKeyDown: (e: React.KeyboardEvent | React.MouseEvent) => void;\n        onClick: (e: React.KeyboardEvent | React.MouseEvent) => void;\n        tabIndex: 0;\n        ref: React.RefObject<HTMLButtonElement>;\n        role: 'button';\n        'aria-haspopup': true;\n        'aria-expanded': boolean;\n    };\n    itemProps: [\n        {\n            onKeyDown: (e: React.KeyboardEvent<HTMLAnchorElement>) => void;\n            tabIndex: -1;\n            role: 'menuitem';\n            ref: React.RefObject<HTMLAnchorElement>;\n        };\n        ...\n    ];\n    isOpen: boolean;\n    setIsOpen: (newValue: boolean) => void;\n    moveFocus: (itemIndex: number) => void;\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"buttonProps:")," An object meant to be spread as properties on a ",(0,o.kt)("inlineCode",{parentName:"li"},"<button />")," element.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"onKeyDown:")," A function which manages the behavior of your dropdown menu when a key is pressed while focused on the menu button."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"onClick:")," The same function as ",(0,o.kt)("inlineCode",{parentName:"li"},"onKeyDown()"),", but its behavior differs somewhat for click events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"tabIndex:")," Sets the tab index property of the ",(0,o.kt)("inlineCode",{parentName:"li"},"<button />")," element."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ref:")," A React ref applied to the ",(0,o.kt)("inlineCode",{parentName:"li"},"<button />")," element, used to manage focus."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"role:")," A role property in accordance with WAI-ARIA guidelines."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"aria-haspopup:")," An ARIA attribute indicating this button has a related menu element."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"aria-expanded:")," An ARIA attribute indicating whether the menu is currently open."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"itemProps:")," An array of objects meant to be spread as properties on ",(0,o.kt)("inlineCode",{parentName:"li"},"<a />")," elements that serve as menu items in your dropdown.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"onKeyDown:")," A function which manages the behavior of your dropdown menu when a key is pressed while focused on a menu item."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"tabIndex:")," Sets the tab index property to ",(0,o.kt)("inlineCode",{parentName:"li"},"-1")," to prevent the browser\u2019s native focusing logic. Focus is managed programatically by this Hook."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"role:")," A role property in accordance with WAI-ARIA guidelines. "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ref:")," A React ref applied to each menu item, used to manage focus."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"isOpen:")," A boolean value indicating if the menu is open or closed. The developer should use this value to make the menu visible or not."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"setIsOpen:")," A function useful for allowing the developer to programmatically open/close the menu."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"moveFocus:")," A function that moves the browser\u2019s focus to the specified item index.")))}p.isMDXComponent=!0}}]);